(in-package #:cl-configurator)

(defparameter *configuration-function-names* ())
(defun read-configuration-file (path)
  (com.informatimago.common-lisp.cesarum.file:sexp-file-contents path))

(defun combine-group-and-name (group name)
  (format nil "~A-~A" group name))
(defun create-name (group name)
  (intern (combine-group-and-name group name)))
(defmacro create-storage-function (name value)
  `(defun ,name ()
     ,value))
(defun make-storage-function (group name value)
  (let ((created-name (create-name group name)))
    (create-storage-function created-name value)))

(defun config-to-functions (config)
  (let ((lst (rest config)));;remove :directory
    (mapcar (lambda (list)
	      (let ((group (first list)))
		(mapcar (lambda (entry)
			  (print group)
			  (if (= (length entry) 2)
			      (create-storage-function group (first entry)
							     (second entry))
			      (create-storage-function  group (first entry)
						       (rest entry))))
			(rest list))))
	    lst)))
